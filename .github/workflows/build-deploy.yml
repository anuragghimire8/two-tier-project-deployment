name: Build and Deploy MERN App

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    #  Checkout repository
    - name: Checkout code
      uses: actions/checkout@v3

    #  Configure AWS credentials
    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    #  Login to AWS ECR
    - name: Login to ECR
      run: |
        aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}

    #  Build and Push Backend  Image
    - name: Build and Push Backend
      run: |
        BRANCH_NAME=${{ github.ref_name }}
        docker build -t backend-app -f  .
        docker tag backend-app:latest ${{ secrets.ECR_REPOSITORY_URI }}/backend-app:$BRANCH_NAME
        docker push ${{ secrets.ECR_REPOSITORY_URI }}/backend-app:$BRANCH_NAME

    #  Build and Push Frontend  Image
    - name: Build and Push Frontend
      run: |
        BRANCH_NAME=${{ github.ref_name }}
        docker build -t frontend-app -f ./ecommerce/dockerfile ./ecommerce
        docker tag frontend-app:latest ${{ secrets.ECR_REPOSITORY_URI }}/frontend-app:$BRANCH_NAME
        docker push ${{ secrets.ECR_REPOSITORY_URI }}/frontend-app:$BRANCH_NAME

    #  Deploy to EC2 using SSH and Docker Compose
    - name: Deploy application
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY }}
       
        script: |
          cd /home/ubuntu/mern-app  # path where docker-compose.yml exists on EC2
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY_URI }}
          docker-compose pull
          docker-compose down
          docker-compose up -d